from typing import ClassVar, Self

class Control:
    ESC: ClassVar[Control] = ...
    APC: ClassVar[Control] = ...
    CSI: ClassVar[Control] = ...
    DCS: ClassVar[Control] = ...
    OSC: ClassVar[Control] = ...
    PM: ClassVar[Control] = ...
    SOS: ClassVar[Control] = ...
    BEL: ClassVar[Control] = ...
    ST: ClassVar[Control] = ...

    def is_escape(self) -> bool: ...
    def is_terminator(self) -> bool: ...
    def is_function(self) -> bool: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other: object) -> bool: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...


class Continuation:
    Abort: ClassVar[Continuation] = ...
    Continue: ClassVar[Continuation] = ...
    Consume: ClassVar[Continuation] = ...

    def __hash__(self) -> int: ...
    def __eq__(self, other: object) -> bool: ...
    def __repr__(self) -> str: ...


class Scanner:
    def __new__(cls) -> Self: ...
    def reset(self) -> None: ...
    def process(self, byte: int) -> Continuation: ...
    def control(self) -> None | Control: ...
    def consume(self) -> str: ...
