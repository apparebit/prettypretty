# PSA: Use actionlint (https://github.com/rhysd/actionlint) to check actions!

name: Publish to GitHub Pages

on:
  # Run when pushing main branch
  push:
    branches: [ "main" ]
  # Run when pushing button in Actions tab
  workflow_dispatch:

# Empower GITHUB_TOKEN to do the work
permissions:
  contents: read
  pages: write
  id-token: write

# Allow just one concurrent deployment, but make sure it can run to completion
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build the documentation and upload it as an artifact
  build:
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'apparebit/prettypretty' }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: "pip"

    - name: Set up stable Rust
      run: rustup toolchain install stable

    - name: Build and install extension module
      run: pip install '.[doc]'

    - name: Configure GitHub Pages
      id: pages
      uses: actions/configure-pages@v5

    - name: Create Rust-based documentation
      run: cargo doc --no-deps --all-features

    - name: Create Python-based documentation
      run: |
        sphinx-build -M html docs docs/_build
        mkdir -v target/doc/python
        cp docs/_build/html/* target/doc/python/

    - name: Create top-level redirect
      run: |
          echo '<meta http-equiv=refresh content=0;url=prettypretty/index.html>' > target/doc/index.html
          echo "# ---- Contents of target/doc/:"
          ls -a target/doc/*

    - name: Upload documentation
      uses: actions/upload-pages-artifact@v3
      with:
        name: github-pages
        path: target/doc/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy documentation to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
